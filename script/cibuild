#!/usr/bin/env node
var cp = require('./utils/child-process-wrapper.js');
var fs = require('fs');
var path = require('path');

require('./utils/config')

process.chdir(path.dirname(__dirname));

var homeDir = process.platform == 'win32' ? process.env.USERPROFILE : process.env.HOME;

function removeNodeModules() {
  var fsPlus;
  try {
    fsPlus = require('fs-plus');
  } catch (error) {
    return;
  }

  try {
    fsPlus.removeSync(path.resolve(__dirname, '..', 'node_modules'));
  } catch (error) {
    console.error(error.message);
    process.exit(1);
  }
}

function removeTempFolders() {
  var fsPlus;
  try {
    fsPlus = require('fs-plus');
  } catch (error) {
    return;
  }

  var temp = require('os').tmpdir();
  if (!fsPlus.isDirectorySync(temp))
    return;

  var deletedFolders = 0;

  fsPlus.readdirSync(temp).filter(function(folderName) {
    return folderName.indexOf('npm-') === 0;
  }).forEach(function(folderName) {
    try {
      fsPlus.removeSync(path.join(temp, folderName));
      deletedFolders++;
    } catch (error) {
      console.error("Failed to delete npm temp folder: " + error.message);
    }
  });

  if (deletedFolders > 0)
    console.log("Deleted " + deletedFolders + " npm folders from temp directory");
}

removeNodeModules();
removeTempFolders();
cp.safeExec.bind(global, 'npm install npm --loglevel error', {cwd: path.resolve(__dirname, '..', 'build')}, function() {
  cp.safeExec.bind(global, 'node script/bootstrap', function(error) {
    if (error)
      process.exit(1);
    require('fs-plus').removeSync.bind(global, path.join(homeDir, '.scout'))
    var async = require('async');
    var gruntPath = path.join('build', 'node_modules', '.bin', 'grunt') + (process.platform === 'win32' ? '.cmd' : '');
    var tasks = [
      cp.safeExec.bind(global, 'git clean -dff'),
      cp.safeExec.bind(global, gruntPath + ' ci --gruntfile build/Gruntfile.js --stack --no-color'),
    ]
    async.series(tasks, function(error) {
      process.exit(error ? 1 : 0);
    });
  })();
})();
